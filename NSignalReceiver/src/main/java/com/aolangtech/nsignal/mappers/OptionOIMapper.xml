<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aolangtech.nsignal.mappers.OptionOIMapper">

  <resultMap id="BaseResultMap" type="com.aolangtech.nsignal.models.OptionOIModel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="stock_symbol" property="stockSymbol" />
    <result column="event_day" property="eventDay" />
    <result column="expiration" property="expiration" />
    <result column="call_put" property="callPut" />
    <result column="strike" property="strike" />
    
    <result column="event_time" property="eventTime" />
    <result column="price" property="price" />
    <result column="open_interest" property="openInterest" />

  </resultMap>
  
  <sql id="BaseColumnList">
   		stock_symbol, 
    	event_day, 
  		expiration, 
  		call_put,
  		strike,
  		open_interest	
  </sql>
  
  <update id="createTable">
 	 CREATE TABLE IF NOT EXISTS ${tableName}
  	(
	  "id" bigserial PRIMARY KEY,
	  "stock_symbol" char(6) DEFAULT NULL,
	  "expiration" integer DEFAULT NULL,
	  "call_put" char(1) DEFAULT NULL,
	  "strike" numeric(10,3) DEFAULT NULL,
	  "event_day" integer DEFAULT NULL,
	  "open_interest" integer DEFAULT NULL,
	  
	  CONSTRAINT ${tableName}_unique UNIQUE(event_day, stock_symbol, expiration, call_put, strike)
	 );
	CREATE INDEX IF NOT EXISTS ${tableName}_symbol_index ON ${tableName}(stock_symbol); 
	CREATE INDEX IF NOT EXISTS ${tableName}_event_day_index ON ${tableName}(event_day); 
  </update>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
  	SELECT *
  	FROM ${tableName}
  	WHERE id = ${id}
  </select>
  
  <delete id="deleteByEventDay">
  	DELETE FROM ${tableName}
  	WHERE event_day = ${eventDay}
  </delete>
  
  
  <insert id="insertWithoutConflict" keyColumn="id" >
  	INSERT INTO ${tableName}(
		<include refid="BaseColumnList"></include>
	)
  	VALUES 
        (
        #{item.stockSymbol},
        #{item.eventDay},
        #{item.expiration},
        #{item.callPut},
        #{item.strike},
        #{item.openInterest}
        )
    ON CONFLICT ON CONSTRAINT ${tableName}_unique DO NOTHING
  </insert>
    
  <insert id="insertList" keyColumn="id" >
  	INSERT INTO ${tableName}(
		<include refid="BaseColumnList"></include>
	)
  	VALUES 
  	<foreach item="item" collection="recordList" separator=",">
        (
        #{item.stockSymbol},
        #{item.eventDay},
        #{item.expiration},
        #{item.callPut},
        #{item.strike},
        #{item.openInterest}
        )
  	</foreach>
  	
  	ON CONFLICT ON CONSTRAINT ${tableName}_unique DO NOTHING
  </insert>
  
</mapper>